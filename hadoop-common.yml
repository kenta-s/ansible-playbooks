---
- name: epel-release
  yum:
    name: epel-release
    state: latest
- name: Install python-pip
  yum:
    name: python-pip
    state: latest
- name: Install pexpect
  command: 'pip install pexpect'
- name: download JDK8
  get_url:
    url: http://download.oracle.com/otn-pub/java/jdk/8u131-b11/d54c1d3a095b4ff2b6607d096fa80163/jdk-8u131-linux-x64.rpm
    dest: /tmp/jdk-8u131-linux-x64.rpm
    mode: 0644
    validate_certs: no
    headers: "Cookie: oraclelicense=accept-securebackup-cookie"
- name: be sure JDK8 is installed
  yum:
    name: /tmp/jdk-8u131-linux-x64.rpm
    state: present      

- name: CDH5
  get_url:
    url: https://archive.cloudera.com/cdh5/redhat/7/x86_64/cdh/cloudera-cdh5.repo
    dest: /etc/yum.repos.d/cloudera-cdh5.repo
- name: RPM key
  rpm_key:
    state: present
    key: https://archive.cloudera.com/cdh5/redhat/7/x86_64/cdh/RPM-GPG-KEY-cloudera
- name: yum clean
  shell: yum clean all
- name: Install libs via yum (latest)
  yum:
    name: '{{ item }}'
    state: latest
  with_items:
    - 'hadoop-yarn-resourcemanager'
    - 'hadoop-hdfs-namenode'
    - 'hadoop-mapreduce-historyserver'
    - 'hadoop-yarn-proxyserver'

- name: remove configuration from core-site.xml
  lineinfile:
    path: /etc/hadoop/conf/core-site.xml
    regexp: '{{ item }}'
    state: absent
  with_items:
    - '^<configuration>'
    - '^</configuration>'
- name: add property to core-site.xml
  lineinfile:
    path: /etc/hadoop/conf/core-site.xml
    line: "<configuration><property><name>fs.defaultFS</name><value>hdfs://master:8020</value></property></configuration>"
    state: present
- name: remove </configuration>  in hdfs-site.xml
  lineinfile:
    path: /etc/hadoop/conf/hdfs-site.xml
    regexp: '{{ item }}'
    state: absent
  with_items:
    - '^<configuration>'
    - '^</configuration>'
    - '<property.*'
    - '</property>'
    - '<name.*'
    - '</name>'
    - '<value.*'
    - '</value>'
- name: add property to hdfs-site.xml
  lineinfile:
    path: /etc/hadoop/conf/hdfs-site.xml
    line: "<configuration><property><name>dfs.permissions.superusergroup</name><value>hadoop</value></property><property><name>dfs.namenode.name.dir</name><value>/var/lib/hadoop-hdfs/cache/dfs/name</value></property><property><name>dfs.datanode.name.dir</name><value>/var/lib/hadoop-hdfs/cache/dfs/data</value></property></configuration>"
    state: present

- name: prepare cache directories
  command: '{{ item }}'
  with_items:
    - 'sudo mkdir -p /var/lib/hadoop-hdfs/cache/dfs/name'
    - 'sudo mkdir -p /var/lib/hadoop-hdfs/cache/dfs/data'
    - 'sudo chown hdfs:hadoop -R /var/lib/hadoop-hdfs/cache/dfs'
    - 'sudo mkdir -p /var/lib/hadoop-yarn/cache/local'
    - 'sudo chown hdfs:hadoop /var/lib/hadoop-yarn/cache/local'
    - 'sudo mkdir -p /var/log/hadoop-yarn/containers'
    - 'sudo chown hdfs:hadoop /var/log/hadoop-yarn/containers'

- name: remove configuration from mapred-site.xml
  lineinfile:
    path: /etc/hadoop/conf/mapred-site.xml
    regexp: '{{ item }}'
    state: absent
  with_items:
    - '^<configuration>'
    - '^</configuration>'

- name: add property to mapred-site.xml
  lineinfile:
    path: /etc/hadoop/conf/mapred-site.xml
    line: "<configuration><property><name>yarn.nodemanager.local-dirs</name><value>file:///var/lib/hadoop-yarn/cache/local</value></property><property><name>yarn.nodemanager.log-dirs</name><value>file:///var/log/hadoop-yarn/containers</value></property><property><name>yarn.nodemanager.remote-app-log-dir</name><value>hdfs://master:8020/var/log/hadoop-yarn/apps</value></property><property><name>mapreduce.jobhistory.address</name><value>master:10020</value></property><property><name>mapreduce.jobhistory.webapp.address</name><value>master:19888</value></property><property><name>hadoop.proxyuser.mapred.groups</name><value>*</value></property><property><name>hadoop.proxyuser.mapred.hosts</name><value>*</value></property><property><name>yarn.app.mapreduce.am.staging-dir</name><value>/user</value></property></configuration>"
    state: present

- name: set values to yarn-site.xml
  lineinfile:
    path: /etc/hadoop/conf/yarn-site.xml
    regexp: '<value>file:///var/lib/hadoop-yarn/cache.*'
    line: '<value>file:///var/lib/hadoop-yarn/cache/local</value>'
    state: present

- name: set values to yarn-site.xml 2
  lineinfile:
    path: /etc/hadoop/conf/yarn-site.xml
    regexp: '(<value>hdfs://var/log/hadoop-yarn/apps</value>|<value>hdfs:///master:8020/var/log/hadoop-yarn/apps</value>)'
    line: '<value>hdfs:///master:8020/var/log/hadoop-yarn/apps</value>'
    state: present

- name: init slaves
  lineinfile:
    path: /etc/hadoop/conf/slaves
    line: 'localhost'
    state: absent

- name: add slaves
  lineinfile:
    path: /etc/hadoop/conf/slaves
    line: '{{ item }}'
    state: present
  with_items:
    - 'slave1'
    - 'slave2'

- name: set etc/hosts
  lineinfile:
    path: /etc/hosts
    line: '{{ item }}'
    state: present
  with_items:
    - '192.168.33.12 master'
    - '192.168.33.13 slave1'
    - '192.168.33.14 slave2'
